{"version":3,"sources":["DisplayUtils.js","components/CanvasWrapper.js","useBounds.js","components/MainMap.js","App.js","serviceWorker.js","index.js"],"names":["polarToCart","rad","dist","x","Math","cos","y","sin","numToHex","c","hex","round","toString","length","colorTemperatureToRGB","kelvin","red","green","blue","temp","log","pow","r","g","b","rgbToHex","clamp","min","max","getMousePos","canvas","evt","rect","getBoundingClientRect","clientX","left","clientY","top","CanvasWrapper","onContextChange","onMouseMove","onDoubleClick","onMouseLeave","style","props","canvasRef","useRef","console","height","useEffect","current","ctx","getContext","imageSmoothingEnabled","width","ref","mousePos","useBounds","React","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","setBounds","window","innerHeight","innerWidth","addEventListener","removeEventListener","useState","bounds","myDist","x1","y1","x2","y2","MainMap","data","parseStar","onStarHover","onStarSelect","zoom","setZoom","mouseDown","setMouseDown","pan","setPan","parsedData","setParsedData","Quadtree","myTree","canvasStyle","position","mapCtx","hoverCtx","hoveredStar","getScreenCoords","useCallback","getWorldCoords","pData","map","entry","clear","forEach","color","size","insert","abs","loc","fillStyle","fillRect","center","opacity","isVisible","sX","sY","s","font","units","scale","label","getScaleBar","fillText","drawSelectedStar","clearRect","drawX","drawY","identifier","par","radius","lum","toFixed","onMouseDown","onMouseUp","event","movementX","movementY","elements","retrieve","sortedElems","point","sort","a","onWheel","deltaMode","deltaY","App","className","entries","e","ra","dec","scaleFactor","log10","floor","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0e3de1b4.chunk.js","sourcesContent":["export const polarToCart = (rad, dist) => ({\n    x: dist * Math.cos(rad),\n    y: dist * Math.sin(rad)\n})\n\nexport const numToHex = (c) => {\n  var hex = Math.round(c).toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n}\n\nconst rgbToHex = ({r, g, b}) => \"#\"+numToHex(r)+numToHex(g)+numToHex(b);\n\n\nexport const colorTemperatureToRGB = kelvin => {\n  var temp = kelvin / 100;\n  var red, green, blue;\n  if( temp <= 66 ){ \n      red = 255; \n      green = temp;\n      green = 99.4708025861 * Math.log(green) - 161.1195681661;\n      if( temp <= 19){\n          blue = 0;\n      } else {\n          blue = temp-10;\n          blue = 138.5177312231 * Math.log(blue) - 305.0447927307;\n      }\n  } else {\n      red = temp - 60;\n      red = 329.698727446 * Math.pow(red, -0.1332047592);\n      green = temp - 60;\n      green = 288.1221695283 * Math.pow(green, -0.0755148492 );\n      blue = 255;\n  }\n\n  return rgbToHex({\n      r : clamp(red,   0, 255),\n      g : clamp(green, 0, 255),\n      b : clamp(blue,  0, 255)\n  })\n}\n\n\nexport const clamp = ( x, min, max ) => {\n\n  if(x<min){ return min; }\n  if(x>max){ return max; }\n\n  return x;\n\n}","import React, {useRef, useEffect} from 'react';\n\n\nfunction getMousePos(canvas, evt) {\n  var rect = canvas.getBoundingClientRect();\n  return {\n    x: evt.clientX - rect.left,\n    y: evt.clientY - rect.top\n  };\n}\nconst CanvasWrapper = ({onContextChange, onMouseMove, onDoubleClick, onMouseLeave, style, ...props}) => {\n  \n  const canvasRef = useRef(null);\n  console.log('rendering with height', style.height)\n  \n  useEffect(() => {\n    if(canvasRef.current) {\n      let ctx = canvasRef.current.getContext(\"2d\");\n      ctx.imageSmoothingEnabled = false;\n      const width = canvasRef.current.width;\n      const height = canvasRef.current.height;\n      onContextChange(ctx, {width, height});\n    }\n  }, [onContextChange]);\n\n  const handleCanvasHover = evt => {\n    if(onMouseMove) {\n      const mousePos = getMousePos(canvasRef.current, evt);\n      onMouseMove(mousePos, evt)\n    }\n  }\n\n  const handleCanvasClick = evt => {\n    if(onDoubleClick) {\n      const mousePos = getMousePos(canvasRef.current, evt);\n      onDoubleClick(mousePos, evt)\n    }\n  }\n\n  return (\n    <canvas \n      style={style} \n      ref={canvasRef} \n      width={style.width} \n      height={style.height}\n      onMouseMove={handleCanvasHover}\n      onDoubleClick={handleCanvasClick}\n      onMouseLeave={onMouseLeave}\n      {...props}\n    ></canvas>\n  );\n}\n\nexport default CanvasWrapper;\n","import React, {useRef, useEffect, useState, useCallback} from 'react';\nfunction debounce(fn, ms) {\n  let timer\n  return _ => {\n    clearTimeout(timer)\n    timer = setTimeout(_ => {\n      timer = null\n      fn.apply(this, arguments)\n    }, ms)\n  };\n}\n\nconst useBounds = () => {\n  React.useEffect(() => {\n    const debouncedHandleResize = debounce(function handleResize() {\n      setBounds({\n        height: window.innerHeight,\n        width: window.innerWidth\n      })\n    }, 200)\n\n    window.addEventListener('resize', debouncedHandleResize)\n\n    return _ => {\n      window.removeEventListener('resize', debouncedHandleResize)\n    }\n    \n  });\n\n  \n  const [bounds, setBounds] = useState({width:window.innerWidth, height:window.innerHeight})\n  return bounds;\n}\n\nexport default useBounds;","import React, {useRef, useEffect, useState, useCallback} from 'react';\nimport Quadtree from '@timohausmann/quadtree-js';\nimport CanvasWrapper from './CanvasWrapper'\n\nimport {clamp} from '../DisplayUtils';\nimport useBounds from '../useBounds';\n\nconst getScaleBar = zoom => {\n  let length = zoom/4\n  let units = ' Parsec'\n  let scale = 0.25\n  if(length < 50) {\n    while(length < 50) {\n      units = ' Parsecs'\n      length*=2\n      scale*=2\n    }\n  } else if(length > 100) {\n    units = ' AU'\n    length /= 206265 \n    while(length < 50) {\n      length*=2\n      scale*=2\n    }\n    if(length > 100) {\n      units = ' Solar Radii'\n      length /= 215 \n      while(length < 50) {\n        length*=2\n        scale*=2\n      }\n    }\n  }\n  \n  return {label: scale+units, length}\n}\n\nconst myDist = ({x:x1,y:y1}, {x:x2,y:y2}) => ((x1-x2)*(x1-x2))+((y1-y2)*(y1-y2));\nconst sortPoints = (point, elems) => elems.sort(({loc:a},{loc:b}) => myDist(point, a)-myDist(point, b));\n\nfunction MainMap({data, parseStar, onStarHover, onStarSelect}) {\n\n  const {width, height} = useBounds();\n  const [zoom, setZoom] = useState(1);\n  const [mouseDown, setMouseDown] = useState(false);\n  const [pan, setPan] = useState({x:0, y:0});\n  const [parsedData, setParsedData] = useState([]);\n  const [myTree] = useState(new Quadtree({\n    x: 0,\n    y: 0,\n    width: 10000,\n    height: 10000,\n  }, 50, 8));\n\n  const canvasStyle = {    \n    position:'absolute',\n    left:'0px',\n    top:'0px',\n    width,\n    height,\n  };\n  \n  const mapCtx = useRef(null);\n  const hoverCtx = useRef(null);\n  const hoveredStar = useRef({})\n  \n  const getScreenCoords = useCallback(({x,y}) => ({x:((x+pan.x)*zoom)+(width/2), y:((y+pan.y)*zoom)+(height/2)}),[zoom, width, height, pan])\n  const getWorldCoords = useCallback(({x,y}) => ({x:(x-(width/2))/zoom-pan.x, y:(y-(height/2))/zoom-pan.y}),[zoom, width, height, pan])\n\n  useEffect(() => {\n    const pData = data.map(entry => ({...parseStar(entry), entry}));\n    setParsedData(pData);\n    myTree.clear();\n    pData.forEach(({x, y, color, size, entry}) => myTree.insert({\n      x: Math.abs(x),\n      y: Math.abs(y),\n      loc: {x, y},\n      width: size,\n      height: size,\n      size,\n      color,\n      entry,\n    }))\n  }, [data, myTree, parseStar])\n\n  useEffect(() => {\n    if(mapCtx.current) {\n      let ctx = mapCtx.current\n      \n      ctx.fillStyle = \"#000000\";\n      ctx.fillRect(0,0, width, height);\n      ctx.fillStyle = \"#0000FF\";\n      const center = getScreenCoords({x:0, y:0})\n      ctx.fillRect(center.x,center.y,5,5);\n      ctx.fillStyle = \"#FFFFFF66\";\n      let count = 0;\n      console.log('redrawing with pan', pan)\n      parsedData.forEach(({x, y, color, size, opacity, isVisible, entry}) => {\n        if ( isVisible) {\n          const {x:sX, y:sY} = getScreenCoords({x,y})\n          if(sX > 0 && sX < width && sY > 0 && sY < height) {\n            const s = clamp((entry[5]*2*zoom)/4.435e+7, size, 1000)\n            ctx.fillStyle = color;\n            if(s === size) ctx.fillStyle = color+opacity\n            \n            ctx.fillRect(sX-s/2,sY-s/2,s,s);\n            count++;\n          }\n        }\n      })\n      ctx.font = \"12px Verdana\";\n      ctx.fillStyle = \"#FFFFFF\";\n      const {label, length} = getScaleBar(zoom);\n      ctx.fillText(label, 20, height-30);\n      ctx.fillRect(20, height-20, length , 3);\n      if(hoverCtx.current && hoveredStar.current.loc) {\n        drawSelectedStar(hoverCtx.current, hoveredStar.current)\n      }\n    }\n      \n  });\n\n \n  const drawSelectedStar = (ctx, {loc, entry}) => {\n    ctx.clearRect(0, 0, canvasStyle.width, canvasStyle.height);\n    ctx.fillStyle = \"#00FF00\";\n    const {x:drawX, y:drawY} = getScreenCoords(loc)\n    ctx.fillRect(drawX-1,drawY-1,3,3);\n    ctx.font = \"12px Verdana\";\n    ctx.fillStyle = \"#FFFFFF\";\n    if(entry) {\n      console.log('Hovered star loc', loc)\n      const [identifier,ra,dec,par,temp, radius, lum] = entry;\n      ctx.fillText('Star: '+identifier, 20, 20);\n      ctx.fillText('Distance: '+(1000/par).toFixed(1)+' Parsecs', 20, 40);\n      ctx.fillText('Temp: '+temp.toFixed()+'K', 20, 60);\n      ctx.fillText('Radius: '+radius.toFixed(2)+'R☉', 20, 80);\n      ctx.fillText('Luminosity : '+lum.toFixed(2)+'L☉', 20, 100);\n    }\n  }\n\n\n  const handleCanvasHover = (mousePos, event) => {\n    if(mouseDown) {\n      \n      const {movementX, movementY} = event;\n      console.log('movement', movementX, movementY);\n      setPan({x:pan.x+movementX/zoom, y:pan.y+movementY/zoom})\n    } else {\n      const {x,y} = getWorldCoords(mousePos)\n      const elements = myTree.retrieve({x:Math.abs(x), y:Math.abs(y), width:8, height:8});\n      //const message = 'Mouse position: ' + x + ',' + y// +' with overlaps '+elements.length;\n      // console.log('nodes', myTree.nodes, 'objects', myTree.objects);\n      //console.log(message);\n      const sortedElems = sortPoints({x:x, y:y}, elements);\n      if(hoverCtx.current) {\n        const [{loc={}, entry}={}]= sortedElems;\n        const ctx = hoverCtx.current\n        hoveredStar.current = {loc, entry}\n        drawSelectedStar(ctx, hoveredStar.current)\n        \n\n        if(onStarHover && entry) onStarHover(entry)\n      }\n    }\n    \n\n  }\n\n  const handleScroll = ({deltaMode, deltaY}) => {\n    console.log(deltaMode, deltaY)\n    setZoom(clamp(zoom+zoom*deltaY/10, 0.1 , 10000000000))\n  }\n  return (\n    <div>\n      <CanvasWrapper style={canvasStyle} onContextChange={c => mapCtx.current = c}/>\n      <CanvasWrapper \n      style={canvasStyle} \n      onMouseDown={() => setMouseDown(true)}\n      onMouseUp={() => setMouseDown(false)}\n      onMouseMove={handleCanvasHover} \n      onDoubleClick={(mousePos) => setPan({x:-hoveredStar.current.loc.x, y:-hoveredStar.current.loc.y})}\n      onWheel={handleScroll} \n      onContextChange={c => hoverCtx.current = c}\n      />\n    </div>\n  );\n}\n\nexport default MainMap;\n","import React from 'react';\nimport {polarToCart, colorTemperatureToRGB, clamp, numToHex} from './DisplayUtils';\nimport './App.css';\nimport entries from './data/165kEntriesCube.json'\nimport MainMap from './components/MainMap';\n\n\n\nconst parseStar = ([identifier,ra,dec,par,temp, radius, lum], scaleFactor=1) => {\n  const dist = ((1000/par)*Math.cos(dec))*scaleFactor\n  const height = ((1000/par)*Math.sin(dec))*scaleFactor\n  const {x,y} = polarToCart(ra, dist)\n  const color = colorTemperatureToRGB(temp);\n  const size = Math.log10(lum+1)+1;//lum>100?(clamp(1+(Math.l(lum+1)),0,3)):1\n  const opacity = numToHex(Math.floor(clamp(Math.log10(lum+1),0.5, 1)*255))\n  const isVisible = Math.abs(height) < 2000 && Math.abs(x) < 10000 &&  Math.abs(y) < 10000;\n  return {\n    x,\n    y,\n    color,\n    size,\n    opacity,\n    isVisible,\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <MainMap data={entries} parseStar={e => parseStar(e, 10)}/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}